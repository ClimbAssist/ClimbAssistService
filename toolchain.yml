# Important: this will not be automatically deployed through our pipeline. To deploy this, you have to manually deploy
# it with ./deploy-toolchain
AWSTemplateFormatVersion: 2010-09-09
Resources:
  CloudFormationTrustRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ClimbAssistCloudFormationRole
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
      - PolicyName: CloudFormationRolePolicy
        PolicyDocument:
          Statement:
          - Action:
            - dynamodb:CreateTable
            - dynamodb:DescribeTable
            - dynamodb:UpdateTable
            - dynamodb:DescribeContinuousBackups
            - dynamodb:UpdateContinuousBackups
            - dynamodb:DescribeTimeToLive
            - dynamodb:UpdateTimeToLive
            - kinesis:CreateStream
            - kinesis:DescribeStream
            - sns:CreateTopic
            - sns:ListTopics
            - sns:GetTopicAttributes
            - sns:SetTopicAttributes
            - s3:CreateBucket
            - ec2:*
            - autoscaling:*
            - elasticloadbalancing:*
            - elasticbeanstalk:*
            - application-autoscaling:*
            - cloudwatch:PutMetricAlarm
            - cognito-idp:*
            - lambda:*
            Effect: Allow
            Resource:
            - '*'
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            Effect: Allow
            Resource:
            - !GetAtt S3Bucket.Arn
            - !Sub ${S3Bucket.Arn}/*
          - Action: s3:*
            Effect: Allow
            Resource:
            - !GetAtt S3Bucket.Arn
            - !Sub ${S3Bucket.Arn}/*
            - arn:aws:s3:::elasticbeanstalk*
            - !Sub arn:${AWS::Partition}:s3:::models-${AWS::AccountId}-${AWS::Region}*
            - !Sub arn:${AWS::Partition}:s3:::map-data-${AWS::AccountId}-${AWS::Region}*
            - !Sub arn:${AWS::Partition}:s3:::photos-${AWS::AccountId}-${AWS::Region}*
          - Action:
            - cloudformation:CreateStack
            - cloudformation:GetTemplate
            - cloudformation:ListStackResources
            - cloudformation:UpdateStack
            - cloudformation:DescribeStack*
            - cloudformation:CancelUpdateStack
            - cloudformation:DeleteStack
            Effect: Allow
            Resource:
            - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awseb-e-*
          - Action: iam:PassRole
            Effect: Allow
            Resource: !GetAtt EBTrustRole.Arn
          - Action:
            - iam:GetRole
            - iam:CreateRole
            - iam:PutRolePolicy
            - iam:PassRole
            - iam:GetRolePolicy
            - iam:AttachRolePolicy
            - iam:UpdateAssumeRolePolicy
            - iam:DeleteRolePolicy
            - iam:DetachRolePolicy
            - iam:DeleteRole
            Effect: Allow
            Resource:
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/DynamoDbAutoScalingRole*
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CognitoUserPoolConfigurationRole*
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CognitoUserPoolDomainRole*
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/SesVerifiedEmailIdentityRole*
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/ClimbAssistElasticBeanstalkWorkerRole*
            - !GetAtt EBTrustRole.Arn
          - Action:
            - iam:CreateInstanceProfile
            - iam:AddRoleToInstanceProfile
            - iam:RemoveRoleFromInstanceProfile
            - iam:DeleteInstanceProfile
            - iam:GetInstanceProfile
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:instance-profile/awscodestar*
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:GetLogEvents
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutRetentionPolicy
            Effect: Allow
            Resource: '*'
          - Action:
            - cloudwatch:GetDashboard
            - cloudwatch:PutDashboard
            Resource:
            - !Sub arn:${AWS::Partition}:cloudwatch::${AWS::AccountId}:dashboard/ClimbAssistDashboard*
            - !Sub arn:${AWS::Partition}:cloudwatch::${AWS::AccountId}:dashboard/ClimbAssistUsageDashboard*
            Effect: Allow
          - Action:
            - route53:ListHostedZones
            - route53:ChangeResourceRecordSets
            - route53:ListResourceRecordSets
            - route53:GetChange
            Effect: Allow
            Resource: '*'
          # These are to avoid accidentally deleting anything important, like our S3 buckets or DynamoDB tables
          - Action:
            - dynamodb:Delete*
            - cognito-idp:Delete*
            Effect: Deny
            Resource: '*'
          - Action: s3:Delete*
            Effect: Deny
            Resource:
            - !Sub arn:${AWS::Partition}:s3:::models-${AWS::AccountId}-${AWS::Region}
            - !Sub arn:${AWS::Partition}:s3:::map-data-${AWS::AccountId}-${AWS::Region}
            - !Sub arn:${AWS::Partition}:s3:::photos-${AWS::AccountId}-${AWS::Region}
          - Action: cloudformation:DeleteStack
            Effect: Deny
            Resource:
            - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-climbassist-infrastructure*
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - !GetAtt S3Bucket.Arn
          - !Sub ${S3Bucket.Arn}/*
        - Action:
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          Effect: Allow
          Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
      PolicyName: CodeBuildPolicy
      Roles:
      - !Ref CodeBuildRole
      - !Ref IntegrationTestRole
  ClimbAssistServiceCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Environment:
        ComputeType: small
        EnvironmentVariables:
        - Name: S3_BUCKET
          Value: !Ref S3Bucket
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
      Name: ClimbAssistService
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: buildspec-back-end.yml
        Type: codepipeline
  ClimbAssistUICodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Environment:
        ComputeType: small
        EnvironmentVariables:
        - Name: S3_BUCKET
          Value: !Ref S3Bucket
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
      Name: ClimbAssistUI
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: buildspec-front-end.yml
        Type: codepipeline
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ClimbAssistCodeBuildRole
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
  CodePipelineTrustRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ClimbAssistCodePipelineRole
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
      Policies:
      - PolicyName: CodePipelinePolicy
        PolicyDocument:
          Statement:
          - Action: s3:*
            Effect: Allow
            Resource:
            - !GetAtt S3Bucket.Arn
            - !Sub ${S3Bucket.Arn}/*
            - arn:aws:s3:::elasticbeanstalk*
          - Action: s3:CreateBucket
            Effect: Allow
            Resource: '*'
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - codebuild:StopBuild
            Effect: Allow
            Resource:
            - !GetAtt ClimbAssistServiceCodeBuildProject.Arn
            - !GetAtt ClimbAssistUICodeBuildProject.Arn
            - !GetAtt IntegrationTestsCodeBuildProject.Arn
          - Action:
            - elasticbeanstalk:*
            Effect: Allow
            Resource:
            - !Sub arn:aws:elasticbeanstalk:${AWS::Region}:${AWS::AccountId}:application/climbassistapp
            - !Sub arn:aws:elasticbeanstalk:${AWS::Region}:${AWS::AccountId}:applicationversion/climbassistapp/*
            - !Sub arn:aws:elasticbeanstalk:${AWS::Region}:${AWS::AccountId}:environment/climbassistapp/climbassistapp
          - Action:
            - autoscaling:DescribeAutoScalingGroups
            - autoscaling:DescribeLaunchConfigurations
            - autoscaling:DescribeScalingActivities
            - autoscaling:ResumeProcesses
            - autoscaling:SuspendProcesses
            - ec2:Describe*
            Effect: Allow
            Resource: '*'
          - Action:
            - cloudformation:GetTemplate
            - cloudformation:ListStackResources
            - cloudformation:UpdateStack
            - cloudformation:DescribeStack*
            Effect: Allow
            Resource:
            - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awseb-e-*
          - Action:
            - cloudformation:DescribeStacks
            - cloudformation:CreateStack
            - cloudformation:UpdateStack
            Effect: Allow
            Resource:
            - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-climbassist-infrastructure*
          - Action: iam:PassRole
            Effect: Allow
            Resource: !GetAtt CloudFormationTrustRole.Arn
  EBTrustRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ClimbAssistElasticBeanstalkTrustRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: elasticbeanstalk.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
      - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
  ProjectPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ClimbAssist
      ArtifactStore:
        Location: !Ref S3Bucket
        Type: S3
      RoleArn: !GetAtt CodePipelineTrustRole.Arn
      Stages:
      - Name: Source
        Actions:
        - Name: ClimbAssistService
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Owner: ClimbAssist
            Repo: ClimbAssistService
            Branch: master
            PollForSourceChanges: false
            # Created by hand
            OAuthToken: '{{resolve:secretsmanager:ClimbAssistGitHubPersonalAccessToken}}'
          OutputArtifacts:
          - Name: ClimbAssistServiceSourceArtifact
        - Name: ClimbAssistUI
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Owner: ClimbAssist
            Repo: ClimbAssistUI
            Branch: master
            PollForSourceChanges: false
            # Created by hand
            OAuthToken: '{{resolve:secretsmanager:ClimbAssistGitHubPersonalAccessToken}}'
          OutputArtifacts:
          - Name: ClimbAssistUISourceArtifact
      - Name: Build
        Actions:
        - Name: ClimbAssistUI
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref ClimbAssistUICodeBuildProject
          InputArtifacts:
          - Name: ClimbAssistUISourceArtifact
          OutputArtifacts:
          - Name: ClimbAssistUIBuildArtifact
          RunOrder: 1
        - Name: ClimbAssistService
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref ClimbAssistServiceCodeBuildProject
            PrimarySource: ClimbAssistServiceSourceArtifact
          InputArtifacts:
          - Name: ClimbAssistUIBuildArtifact
          - Name: ClimbAssistServiceSourceArtifact
          OutputArtifacts:
          - Name: ClimbAssistServiceBuildArtifact
          RunOrder: 2
      - Name: Beta
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            # TODO maybe remove these somewhat duplicated parameters later
            ParameterOverrides: !Sub |
              {
                "EBTrustRole": "${EBTrustRole}",
                "ResourceNameSuffix": "-beta",
                "Stage": "beta"
              }
            RoleArn: !GetAtt CloudFormationTrustRole.Arn
            StackName: !Sub awscodestar-climbassist-infrastructure-beta
            TemplatePath: ClimbAssistServiceBuildArtifact::template-export.yml
            OutputFileName: cloudformation-output.json
          InputArtifacts:
          - Name: ClimbAssistServiceBuildArtifact
          OutputArtifacts:
          - Name: ClimbAssistBetaDeployArtifact
      - Name: IntegrationTests
        Actions:
        - Name: IntegrationTests
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref IntegrationTestsCodeBuildProject
            PrimarySource: ClimbAssistServiceSourceArtifact
          InputArtifacts:
          - Name: ClimbAssistServiceSourceArtifact
          - Name: ClimbAssistBetaDeployArtifact
      - Name: Prod
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            ParameterOverrides: !Sub |
              {
                "EBTrustRole": "${EBTrustRole}",
                "Stage": "prod"
              }
            RoleArn: !GetAtt CloudFormationTrustRole.Arn
            StackName: !Sub awscodestar-climbassist-infrastructure
            TemplatePath: ClimbAssistServiceBuildArtifact::template-export.yml
          InputArtifacts:
          - Name: ClimbAssistServiceBuildArtifact
  ClimbAssistServiceGitHubPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        # Created by hand
        SecretToken: '{{resolve:secretsmanager:ClimbAssistServiceWebhookSecret}}'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/master
      RegisterWithThirdParty: true
      TargetPipeline: !Ref ProjectPipeline
      TargetPipelineVersion: !GetAtt ProjectPipeline.Version
      TargetAction: ClimbAssistService
  ClimbAssistUIGitHubPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        # Created by hand
        SecretToken: '{{resolve:secretsmanager:ClimbAssistUIWebhookSecret}}'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/master
      RegisterWithThirdParty: true
      TargetPipeline: !Ref ProjectPipeline
      TargetPipelineVersion: !GetAtt ProjectPipeline.Version
      TargetAction: ClimbAssistUI
  S3ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Id: SSEAndSSLPolicy
        Statement:
        - Action: s3:PutObject
          Condition:
            Bool:
              aws:SecureTransport: false
            StringNotEquals:
              s3:x-amz-server-side-encryption: aws:kms
          Effect: Deny
          Principal: '*'
          Resource: !Sub ${S3Bucket.Arn}/*
        - Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          - s3:PutObject
          Condition:
            Bool:
              aws:SecureTransport: true
          Effect: Allow
          Principal:
            AWS:
            - !GetAtt CodePipelineTrustRole.Arn
            - !GetAtt CodeBuildRole.Arn
          Resource:
          - !GetAtt S3Bucket.Arn
          - !Sub ${S3Bucket.Arn}/*
        Version: 2012-10-17
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub aws-codestar-${AWS::Region}-${AWS::AccountId}-climbassist-pipe
      Tags:
      - Key: Name
        Value: !Sub climbassist-S3Bucket
      VersioningConfiguration:
        Status: Enabled
  IntegrationTestsCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Environment:
        ComputeType: small
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: ResourceNameSuffix
          Value: -beta
      Name: !Sub climbassist-integration-tests
      ServiceRole: !Ref IntegrationTestRole
      Source:
        BuildSpec: buildspec-integration-tests.yml
        Type: codepipeline
      TimeoutInMinutes: 480 # 8 hours, maximum
  IntegrationTestRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ClimbAssistIntegrationTestRole
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Policies:
      - PolicyName: IntegrationTestPolicy
        PolicyDocument:
          Statement:
          - Action:
            - cognito-idp:AdminAddUserToGroup
            - cognito-idp:AdminDeleteUser
            - cognito-idp:AdminRemoveUserFromGroup
            - ses:CreateReceiptRule
            - ses:CreateReceiptRuleSet
            - ses:DeleteReceiptRule
            - ses:DeleteReceiptRuleSet
            - ses:DescribeActiveReceiptRuleSet
            - ses:SetActiveReceiptRuleSet
            - sns:Unsubscribe
            Effect: Allow
            Resource: '*'
          - Action:
            - sqs:CreateQueue
            - sqs:DeleteMessage
            - sqs:DeleteQueue
            - sqs:GetQueueAttributes
            - sqs:ReceiveMessage
            - sqs:SetQueueAttributes
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:integ-*
          - Action:
            - sns:CreateTopic
            - sns:DeleteTopic
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:integ-*
          - Action: sns:Subscribe
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:integ-*
            Condition:
              StringLike:
                sns:Endpoint: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:integ-*
              StringEquals:
                sns:Protocol: sqs
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::models-${AWS::AccountId}-${AWS::Region}*
